


$ node spin1.js    16,827,637 loop
$ node spin2.js       611,908 setImmediate
$ node spin3.js           559 setTimeout
$ node spin4.js     1,247,122 process.nextTick (why is this faster than setImmediate?)
$ node spin5.js     3,405,588 Promise
$ node spin6.js     5,195,158 bluebird

$ npm run electron-page page1.html                       chrome             electron
1. synchronous loop, update once                         11,706,114 frozen  17,339,040 frozen
2. synchronous loop, update every time                      321,243 frozen     282,193 frozen
3. setImmediate                                                     error       93,642 fluid
4. setTimeout                                                   196 fluid          195 fluid
5. process.nextTick                                                 error    3,285,968 frozen
6. Promise                                                  197,503 frozen     101,166 frozen

$ npm run electron-page page2.html
7. bluebird                                               4,544,271 frozen   4,804,870 frozen

$ npm run electron-page page3.html
8. setImmediate, update once                                        error       95,034 fluid
9. setImmediate, update every time                                  error       55,129 fluid
10. window.requestAnimationFrame, update every time              62 fluid           62 fluid
11. setImmediate, update every animation frame                      error       88,460 fluid

$ npm run electron-page page4.html
12. Vue synchronous loop, update once                    11,572,474 frozen  17,426,126 frozen
13. Vue synchronous loop, update every time               2,560,203 frozen   2,466,111 frozen
14. Vue setImmediate, update once                                   error       94,588 fluid
15. Vue setImmediate, update every time                             error       16,996 fluid
16. Vue window.requestAnimationFrame, update every time          62 fluid           62 fluid
17. Vue setImmediate, update every animation frame                  error       87,273 fluid







node/chrome/firefox/ie/electron
does it work?
does it stop the clock?
what's the count?






ok, so that's all great
next up, make the vue demo which is the same as page3 but all in vue
use the production verson of vue in case that matters

then make the crazy one with a button that makes another 100 counters that count forever up

is vue using requestAnimationFrame already?
that would be great, because then you wouldn't have to
write an example that shows whether this is the case or not

how would you measure how much time the browser is spending updating things?
if you could measure this, then you could scale back the update frequency when time gets tighter











